# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# PROGRAMS
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | wmenu | xargs swaymsg exec --
#set $menu walker | xargs swaymsg exec --

# application launcher
#set $menu ulauncher-toggle 
set $menu rofi -show drun -show-icons
set $fileManager dolphin
#set $fileManager nemo

# Enable Xwayland support
xwayland enable

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Pictures/wallpapers/wallhaven-d6y12l_2560x1440.png fill
#output * bg ~/Pictures/wallpapers/el20rjvyc4ka1.png fill
#output * bg /home/e/Pictures/wallpapers/3840x2160_cyberpunk_city_skyline.jpg fill
#output * bg /home/e/Pictures/wallpapers/fish-chasing-diver.jpeg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output DP-3 mode 2560x1440@164.997Hz position 0,0
#output DP-3 adaptive_sync on

# headless display for sunshine
# create a virtual display: $ swaymsg create_output HEADLESS-1
# unplug the virtual display: $ swaymsg output HEADLESS-1 unplug
#workspace 99 output HEADLESS-1
#bindsym $mod+g workspace number 99
#bindsym $mod+Shift+g move container to workspace number 99
#output HEADLESS-1 {
#    pos 2560,0
#    mode 1280x720@60Hz
#}

### Idle configuration
exec $HOME/.config/sway/bin/swayidle.sh

#
# Example configuration:
#
#exec swayidle -w \
#         timeout 300 'swaylock -f -c 000000' \
#         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#         before-sleep 'playerctl pause; swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "1133:50503:Logitech_USB_Receiver" {
    accel_profile "flat"
    pointer_accel 0.1
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    #bindsym $mod+d exec $menu
    bindsym $mod+Space exec $menu

    # emoji search with rofi
    bindsym $mod+Shift+e exec rofi -modi emoji -show emoji

    # Open file browser
    bindsym $mod+e exec $fileManager

    # start clipboard manager
    bindsym $mod+Shift+v exec copyq toggle

    # screenshot a monitor
    # `man grim` for more details
    # basic way (works)
    #bindsym PRINT exec grim
    # screenshot a region
    #bindsym Shift+PRINT exec grim -g "$(slurp)"

    # screenshots (new) - main perk to this method is i get a nice notification on screenshot
    # requires: pacman -S sway-contrib
    # whole screen
    bindsym PRINT exec /usr/share/sway-contrib/grimshot --notify save output
    # "anything" (really just selection since window capture doesnt work in "anything" mode)
    bindsym Shift+PRINT exec /usr/share/sway-contrib/grimshot --notify save anything
    
    # color picker
    # old method (simple)
    #bindsym $mod+Shift+p exec grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n 1 | cut -d ' ' -f 4 | wl-copy

    # dat new new
    bindsym $mod+Shift+p exec /usr/share/sway-contrib/grimpicker -cn

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+m exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# System Control Keybinds
    #bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    #bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    #bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    #bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Wireplumber to control audio shortcuts
    bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_SINK@ 5%+
    bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_SINK@ 5%-
    bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86Eject exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

# Brightness control. brightnessctl doesn't seem to do anything on wayland.
    bindsym XF86MonBrightnessDown exec ddcutil setvcp 10 - 10
    bindsym XF86MonBrightnessUp exec ddcutil setvcp 10 + 10
    bindsym KP_Subtract exec ddcutil setvcp 10 - 10
    bindsym KP_Add exec ddcutil setvcp 10 + 10
    bindsym XF86Search exec bemenu-run

# lock the system
#bindsym $mod+Shift+Backspace exec "swaylock -f -c 000000"
bindsym $mod+Shift+Backspace exec "loginctl lock-session"
# going to try to suspend. Wish me luck :|
# STILL DOES NOT WORK. Possible chance to lock up system. IDK why.
#bindsym $mod+Shift+Backspace exec "systemctl suspend"


# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    #bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+s layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    #bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 20px
    bindsym $down resize shrink height 20px
    bindsym $up resize grow height 20px
    bindsym $right resize grow width 20px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 20px
    bindsym Down resize grow height 20px
    bindsym Up resize shrink height 20px
    bindsym Right resize grow width 20px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
bar {
    swaybar_command /home/e/.config/sway/bin/launch-waybar
}

# quick hotkey for toggling eww development widget on/off
#bindsym $mod+P exec /home/e/Desktop/eww/target/release/eww open dev
#bindsym $mod+Shift+P exec /home/e/Desktop/eww/target/release/eww close dev

#
# Styling
# include ./styling
# set border style to none since I will use a script to display focus
default_border none
gaps inner 4
gaps outer 4

# script to make unfocused windows slightly transparent [works like a charm :)]
# requires: pacman -S sway-contrib
exec_always /usr/bin/python /usr/share/sway-contrib/inactive-windows-transparency.py

# disable border on ulauncher
for_window [app_id="ulauncher"] border none

# floating windows
for_window [app_id="org.pulseaudio.pavucontrol"] floating enable
for_window [app_id="blueman-manager"] floating enable
for_window [app_id="org.corectrl.CoreCtrl"] floating enable
for_window [app_id="hyprland-share-picker"] floating enable
for_window [app_id="org.kde.kalk"] floating enable

for_window [app_id="org.kde.ark"] floating enable

# clipboard manager
for_window [app_id="com.github.hluk.copyq"] {
    floating enable
    resize set 800 800
    move down 290
}

for_window [app_id="org.kde.filelight"] floating enable

for_window [app_id="org.kde.kdeconnect.daemon"] floating enable
for_window [app_id="org.kde.dolphin"] floating enable
#for_window [app_id="org.kde.dolphin" title="^Copying"] floating enable
for_window [app_id="org.kde.dolphin" title="(?i)(?:copying|deleting|moving|question|save file|progress)"] floating enable, border pixel 2

# autostart programs on login
include /home/e/.config/sway/config.d/startup

# dropdown terminal
include /home/e/.config/sway/config.d/dropdown_terminal

include /etc/sway/config.d/*
